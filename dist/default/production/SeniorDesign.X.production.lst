

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 05 10:17:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000E                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  010C                     	;# 
    63  010E                     	;# 
    64  0116                     	;# 
    65  0117                     	;# 
    66  011D                     	;# 
    67  018C                     	;# 
    68  018E                     	;# 
    69  0191                     	;# 
    70  0191                     	;# 
    71  0192                     	;# 
    72  0193                     	;# 
    73  0193                     	;# 
    74  0194                     	;# 
    75  0195                     	;# 
    76  0196                     	;# 
    77  0197                     	;# 
    78  0199                     	;# 
    79  019A                     	;# 
    80  019B                     	;# 
    81  019B                     	;# 
    82  019C                     	;# 
    83  019D                     	;# 
    84  019E                     	;# 
    85  019F                     	;# 
    86  020C                     	;# 
    87  0211                     	;# 
    88  0211                     	;# 
    89  0212                     	;# 
    90  0212                     	;# 
    91  0213                     	;# 
    92  0213                     	;# 
    93  0214                     	;# 
    94  0214                     	;# 
    95  0215                     	;# 
    96  0215                     	;# 
    97  0215                     	;# 
    98  0216                     	;# 
    99  0216                     	;# 
   100  0217                     	;# 
   101  0217                     	;# 
   102  0391                     	;# 
   103  0392                     	;# 
   104  0393                     	;# 
   105  039A                     	;# 
   106  039B                     	;# 
   107  0611                     	;# 
   108  0612                     	;# 
   109  0613                     	;# 
   110  0613                     	;# 
   111  0614                     	;# 
   112  0615                     	;# 
   113  0616                     	;# 
   114  0616                     	;# 
   115  0E8E                     	;# 
   116  0E8F                     	;# 
   117  0E90                     	;# 
   118  0E91                     	;# 
   119  0E92                     	;# 
   120  0E93                     	;# 
   121  0E94                     	;# 
   122  0E94                     	;# 
   123  0E95                     	;# 
   124  0E96                     	;# 
   125  0E97                     	;# 
   126  0E98                     	;# 
   127  0E99                     	;# 
   128  0E9A                     	;# 
   129  0E9B                     	;# 
   130  0E9C                     	;# 
   131  0E9D                     	;# 
   132  0E9E                     	;# 
   133  0E9F                     	;# 
   134  0FE4                     	;# 
   135  0FE5                     	;# 
   136  0FE6                     	;# 
   137  0FE7                     	;# 
   138  0FE8                     	;# 
   139  0FE9                     	;# 
   140  0FEA                     	;# 
   141  0FEB                     	;# 
   142  0FED                     	;# 
   143  0FEE                     	;# 
   144  0FEF                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000E                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  008C                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  010C                     	;# 
   181  010E                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  011D                     	;# 
   185  018C                     	;# 
   186  018E                     	;# 
   187  0191                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0193                     	;# 
   191  0193                     	;# 
   192  0194                     	;# 
   193  0195                     	;# 
   194  0196                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019F                     	;# 
   204  020C                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0214                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  039A                     	;# 
   224  039B                     	;# 
   225  0611                     	;# 
   226  0612                     	;# 
   227  0613                     	;# 
   228  0613                     	;# 
   229  0614                     	;# 
   230  0615                     	;# 
   231  0616                     	;# 
   232  0616                     	;# 
   233  0E8E                     	;# 
   234  0E8F                     	;# 
   235  0E90                     	;# 
   236  0E91                     	;# 
   237  0E92                     	;# 
   238  0E93                     	;# 
   239  0E94                     	;# 
   240  0E94                     	;# 
   241  0E95                     	;# 
   242  0E96                     	;# 
   243  0E97                     	;# 
   244  0E98                     	;# 
   245  0E99                     	;# 
   246  0E9A                     	;# 
   247  0E9B                     	;# 
   248  0E9C                     	;# 
   249  0E9D                     	;# 
   250  0E9E                     	;# 
   251  0E9F                     	;# 
   252  0FE4                     	;# 
   253  0FE5                     	;# 
   254  0FE6                     	;# 
   255  0FE7                     	;# 
   256  0FE8                     	;# 
   257  0FE9                     	;# 
   258  0FEA                     	;# 
   259  0FEB                     	;# 
   260  0FED                     	;# 
   261  0FEE                     	;# 
   262  0FEF                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000E                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  008C                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  010C                     	;# 
   299  010E                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0197                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  039A                     	;# 
   342  039B                     	;# 
   343  0611                     	;# 
   344  0612                     	;# 
   345  0613                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0616                     	;# 
   351  0E8E                     	;# 
   352  0E8F                     	;# 
   353  0E90                     	;# 
   354  0E91                     	;# 
   355  0E92                     	;# 
   356  0E93                     	;# 
   357  0E94                     	;# 
   358  0E94                     	;# 
   359  0E95                     	;# 
   360  0E96                     	;# 
   361  0E97                     	;# 
   362  0E98                     	;# 
   363  0E99                     	;# 
   364  0E9A                     	;# 
   365  0E9B                     	;# 
   366  0E9C                     	;# 
   367  0E9D                     	;# 
   368  0E9E                     	;# 
   369  0E9F                     	;# 
   370  0FE4                     	;# 
   371  0FE5                     	;# 
   372  0FE6                     	;# 
   373  0FE7                     	;# 
   374  0FE8                     	;# 
   375  0FE9                     	;# 
   376  0FEA                     	;# 
   377  0FEB                     	;# 
   378  0FED                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000E                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  008C                     	;# 
   407  008E                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  010C                     	;# 
   417  010E                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  011D                     	;# 
   421  018C                     	;# 
   422  018E                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0197                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020C                     	;# 
   441  0211                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0214                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0216                     	;# 
   453  0216                     	;# 
   454  0217                     	;# 
   455  0217                     	;# 
   456  0391                     	;# 
   457  0392                     	;# 
   458  0393                     	;# 
   459  039A                     	;# 
   460  039B                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0E8E                     	;# 
   470  0E8F                     	;# 
   471  0E90                     	;# 
   472  0E91                     	;# 
   473  0E92                     	;# 
   474  0E93                     	;# 
   475  0E94                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E96                     	;# 
   479  0E97                     	;# 
   480  0E98                     	;# 
   481  0E99                     	;# 
   482  0E9A                     	;# 
   483  0E9B                     	;# 
   484  0E9C                     	;# 
   485  0E9D                     	;# 
   486  0E9E                     	;# 
   487  0E9F                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000E                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  008C                     	;# 
   525  008E                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0116                     	;# 
   537  0117                     	;# 
   538  011D                     	;# 
   539  018C                     	;# 
   540  018E                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0194                     	;# 
   547  0195                     	;# 
   548  0196                     	;# 
   549  0197                     	;# 
   550  0199                     	;# 
   551  019A                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019C                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  020C                     	;# 
   559  0211                     	;# 
   560  0211                     	;# 
   561  0212                     	;# 
   562  0212                     	;# 
   563  0213                     	;# 
   564  0213                     	;# 
   565  0214                     	;# 
   566  0214                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  039A                     	;# 
   578  039B                     	;# 
   579  0611                     	;# 
   580  0612                     	;# 
   581  0613                     	;# 
   582  0613                     	;# 
   583  0614                     	;# 
   584  0615                     	;# 
   585  0616                     	;# 
   586  0616                     	;# 
   587  0E8E                     	;# 
   588  0E8F                     	;# 
   589  0E90                     	;# 
   590  0E91                     	;# 
   591  0E92                     	;# 
   592  0E93                     	;# 
   593  0E94                     	;# 
   594  0E94                     	;# 
   595  0E95                     	;# 
   596  0E96                     	;# 
   597  0E97                     	;# 
   598  0E98                     	;# 
   599  0E99                     	;# 
   600  0E9A                     	;# 
   601  0E9B                     	;# 
   602  0E9C                     	;# 
   603  0E9D                     	;# 
   604  0E9E                     	;# 
   605  0E9F                     	;# 
   606  0FE4                     	;# 
   607  0FE5                     	;# 
   608  0FE6                     	;# 
   609  0FE7                     	;# 
   610  0FE8                     	;# 
   611  0FE9                     	;# 
   612  0FEA                     	;# 
   613  0FEB                     	;# 
   614  0FED                     	;# 
   615  0FEE                     	;# 
   616  0FEF                     	;# 
   617                           
   618                           	psect	idataBANK0
   619  029C                     __pidataBANK0:	
   620                           
   621                           ;initializer for _mac
   622  029C  3454               	retlw	84
   623  029D  3400               	retlw	0
   624  029E  3452               	retlw	82
   625  029F  3400               	retlw	0
   626  02A0  3400               	retlw	0
   627  02A1  3400               	retlw	0
   628  02A2  3400               	retlw	0
   629  02A3  3400               	retlw	0
   630  02A4  34F8               	retlw	248
   631  02A5  3400               	retlw	0
   632  02A6  3401               	retlw	1
   633  02A7  3400               	retlw	0
   634                           
   635                           ;initializer for _ip
   636  02A8  34A9               	retlw	169
   637  02A9  3400               	retlw	0
   638  02AA  3480               	retlw	128
   639  02AB  3400               	retlw	0
   640  02AC  3480               	retlw	128
   641  02AD  3400               	retlw	0
   642  02AE  3482               	retlw	130
   643  02AF  3400               	retlw	0
   644                           
   645                           ;initializer for _source_ip
   646  02B0  34A9               	retlw	169
   647  02B1  3400               	retlw	0
   648  02B2  3480               	retlw	128
   649  02B3  3400               	retlw	0
   650  02B4  3480               	retlw	128
   651  02B5  3400               	retlw	0
   652  02B6  3481               	retlw	129
   653  02B7  3400               	retlw	0
   654                           
   655                           ;initializer for _subnet
   656  02B8  34FF               	retlw	255
   657  02B9  3400               	retlw	0
   658  02BA  3400               	retlw	0
   659  02BB  3400               	retlw	0
   660  02BC  3400               	retlw	0
   661  02BD  3400               	retlw	0
   662  02BE  3400               	retlw	0
   663  02BF  3400               	retlw	0
   664                           
   665                           ;initializer for _source_port
   666  02C0  3413               	retlw	19
   667  02C1  3400               	retlw	0
   668  02C2  3488               	retlw	136
   669  02C3  3400               	retlw	0
   670  000B                     _INTCONbits	set	11
   671  0011                     _PIR1bits	set	17
   672  0095                     _OPTION_REG	set	149
   673  008C                     _TRISAbits	set	140
   674  008E                     _TRISCbits	set	142
   675  010E                     _LATCbits	set	270
   676  0211                     _SSPBUF	set	529
   677  0215                     _SSPCONbits	set	533
   678  0214                     _SSPSTATbits	set	532
   679                           
   680                           ; #config settings
   681  0000                     
   682                           	psect	cinit
   683  001C                     start_initialization:	
   684  001C                     __initialization:	
   685                           
   686                           ; Clear objects allocated to BANK0
   687  001C  3061               	movlw	low __pbssBANK0
   688  001D  0084               	movwf	4
   689  001E  3000               	movlw	high __pbssBANK0
   690  001F  0085               	movwf	5
   691  0020  300E               	movlw	14
   692  0021  3183  232E  3180   	fcall	clear_ram0
   693                           
   694                           ; Initialize objects allocated to BANK0
   695  0024  309C               	movlw	low __pidataBANK0
   696  0025  0084               	movwf	4
   697  0026  3082               	movlw	(high __pidataBANK0)| (0+128)
   698  0027  0085               	movwf	5
   699  0028  3020               	movlw	low __pdataBANK0
   700  0029  0086               	movwf	6
   701  002A  3000               	movlw	high __pdataBANK0
   702  002B  0087               	movwf	7
   703  002C  3028               	movlw	40
   704  002D  3183  2334         	fcall	init_ram
   705  002F                     end_of_initialization:	
   706                           ;End of C runtime variable initialization code
   707                           
   708  002F                     __end_of__initialization:	
   709  002F  0020               	movlb	0
   710  0030  3183  2B3A         	ljmp	_main	;jump to C main() function
   711                           
   712                           	psect	bssBANK0
   713  0061                     __pbssBANK0:	
   714  0061                     _cur_data:	
   715  0061                     	ds	2
   716  0063                     _gateway:	
   717  0063                     	ds	8
   718  006B                     _vib_data:	
   719  006B                     	ds	4
   720                           
   721                           	psect	dataBANK0
   722  0020                     __pdataBANK0:	
   723  0020                     _mac:	
   724  0020                     	ds	12
   725  002C                     _ip:	
   726  002C                     	ds	8
   727  0034                     _source_ip:	
   728  0034                     	ds	8
   729  003C                     _subnet:	
   730  003C                     	ds	8
   731  0044                     _source_port:	
   732  0044                     	ds	4
   733                           
   734                           	psect	clrtext
   735  032E                     clear_ram0:	
   736                           ;	Called with FSR0 containing the base address, and
   737                           ;	WREG with the size to clear
   738                           
   739  032E  0064               	clrwdt	;clear the watchdog before getting into this loop
   740  032F                     clrloop0:	
   741  032F  0180               	clrf	0	;clear RAM location pointed to by FSR
   742  0330  3101               	addfsr 0,1
   743  0331  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   744  0332  2B2F               	goto	clrloop0	;have we reached the end yet?
   745  0333  3400               	retlw	0	;all done for this memory range, return
   746                           
   747                           	psect	inittext
   748  0334                     init_ram:	
   749  0334  00FE               	movwf	126
   750  0335                     initloop:	
   751  0335  0012               	moviw fsr0++
   752  0336  001E               	movwi fsr1++
   753  0337  0BFE               	decfsz	126,f
   754  0338  2B35               	goto	initloop
   755  0339  3400               	retlw	0
   756                           
   757                           	psect	cstackCOMMON
   758  0070                     __pcstackCOMMON:	
   759  0070                     ?_port_config:	
   760  0070                     ?_spi_config:	
   761                           ; 0 bytes @ 0x0
   762                           
   763  0070                     ?_ad747_init:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0070                     ?_wiz_init:	
   767                           ; 0 bytes @ 0x0
   768                           
   769  0070                     ?_adc_12:	
   770                           ; 0 bytes @ 0x0
   771                           
   772  0070                     ?_config:	
   773                           ; 0 bytes @ 0x0
   774                           
   775  0070                     ?_ISR:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0070                     ?i1_spi:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0070                     i1spi@mosi:	
   782                           ; 2 bytes @ 0x0
   783                           
   784                           
   785                           ; 2 bytes @ 0x0
   786  0070                     	ds	2
   787  0072                     ??i1_spi:	
   788                           
   789                           ; 0 bytes @ 0x2
   790  0072                     	ds	2
   791  0074                     i1spi@miso:	
   792                           
   793                           ; 2 bytes @ 0x4
   794  0074                     	ds	2
   795  0076                     ??_adc_12:	
   796  0076                     ?_adc_8:	
   797                           ; 0 bytes @ 0x6
   798                           
   799  0076                     adc_12@mosi:	
   800                           ; 2 bytes @ 0x6
   801                           
   802                           
   803                           ; 1 bytes @ 0x6
   804  0076                     	ds	2
   805  0078                     ??_adc_8:	
   806                           
   807                           ; 0 bytes @ 0x8
   808  0078                     	ds	2
   809  007A                     adc_8@data:	
   810                           
   811                           ; 2 bytes @ 0xA
   812  007A                     	ds	2
   813  007C                     ??_ISR:	
   814                           
   815                           ; 0 bytes @ 0xC
   816  007C                     	ds	1
   817                           
   818                           	psect	cstackBANK0
   819  0048                     __pcstackBANK0:	
   820  0048                     ??_port_config:	
   821  0048                     ??_spi_config:	
   822                           ; 0 bytes @ 0x0
   823                           
   824  0048                     ??_ad747_init:	
   825                           ; 0 bytes @ 0x0
   826                           
   827  0048                     ?_spi:	
   828                           ; 0 bytes @ 0x0
   829                           
   830  0048                     spi@mosi:	
   831                           ; 2 bytes @ 0x0
   832                           
   833                           
   834                           ; 2 bytes @ 0x0
   835  0048                     	ds	2
   836  004A                     ??_spi:	
   837                           
   838                           ; 0 bytes @ 0x2
   839  004A                     	ds	2
   840  004C                     spi@miso:	
   841                           
   842                           ; 2 bytes @ 0x4
   843  004C                     	ds	2
   844  004E                     ?_wiz_reg_write:	
   845  004E                     ?_wiz_write:	
   846                           ; 0 bytes @ 0x6
   847                           
   848  004E                     ?_wiz_reg_read:	
   849                           ; 0 bytes @ 0x6
   850                           
   851  004E                     wiz_reg_read@addr_hi:	
   852                           ; 2 bytes @ 0x6
   853                           
   854  004E                     wiz_reg_write@addr_hi:	
   855                           ; 2 bytes @ 0x6
   856                           
   857  004E                     wiz_write@addr_hi:	
   858                           ; 2 bytes @ 0x6
   859                           
   860                           
   861                           ; 2 bytes @ 0x6
   862  004E                     	ds	2
   863  0050                     wiz_reg_read@addr_lo:	
   864  0050                     wiz_reg_write@addr_lo:	
   865                           ; 2 bytes @ 0x8
   866                           
   867  0050                     wiz_write@addr_lo:	
   868                           ; 2 bytes @ 0x8
   869                           
   870                           
   871                           ; 2 bytes @ 0x8
   872  0050                     	ds	2
   873  0052                     ??_wiz_reg_read:	
   874  0052                     wiz_write@mosi:	
   875                           ; 0 bytes @ 0xA
   876                           
   877  0052                     wiz_reg_read@miso:	
   878                           ; 1 bytes @ 0xA
   879                           
   880  0052                     wiz_reg_write@mosi:	
   881                           ; 2 bytes @ 0xA
   882                           
   883                           
   884                           ; 2 bytes @ 0xA
   885  0052                     	ds	1
   886  0053                     wiz_write@length:	
   887                           
   888                           ; 2 bytes @ 0xB
   889  0053                     	ds	1
   890  0054                     ??_wiz_reg_write:	
   891                           
   892                           ; 0 bytes @ 0xC
   893  0054                     	ds	1
   894  0055                     ??_wiz_write:	
   895                           
   896                           ; 0 bytes @ 0xD
   897  0055                     	ds	1
   898  0056                     wiz_write@i:	
   899                           
   900                           ; 2 bytes @ 0xE
   901  0056                     	ds	2
   902  0058                     ??_wiz_init:	
   903                           
   904                           ; 0 bytes @ 0x10
   905  0058                     	ds	1
   906  0059                     wiz_init@i:	
   907                           
   908                           ; 2 bytes @ 0x11
   909  0059                     	ds	2
   910  005B                     wiz_init@sock:	
   911                           
   912                           ; 2 bytes @ 0x13
   913  005B                     	ds	2
   914  005D                     ??_config:	
   915  005D                     ?_main:	
   916                           ; 0 bytes @ 0x15
   917                           
   918  005D                     main@argc:	
   919                           ; 2 bytes @ 0x15
   920                           
   921                           
   922                           ; 2 bytes @ 0x15
   923  005D                     	ds	2
   924  005F                     main@argv:	
   925                           
   926                           ; 2 bytes @ 0x17
   927  005F                     	ds	2
   928  0061                     ??_main:	
   929                           
   930                           	psect	maintext
   931  033A                     __pmaintext:	
   932                           ; 0 bytes @ 0x19
   933 ;;
   934 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   935 ;;
   936 ;; *************** function _main *****************
   937 ;; Defined at:
   938 ;;		line 65 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  argc            2   21[BANK0 ] int 
   941 ;;  argv            2   23[BANK0 ] PTR PTR unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2   21[BANK0 ] int 
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : B1F/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;Total ram usage:        4 bytes
   958 ;; Hardware stack levels required when called:    7
   959 ;; This function calls:
   960 ;;		_config
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  033A                     _main:	
   969                           
   970                           ;main.c: 67: config();
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   974  033A  3183  230B  3183   	fcall	_config
   975  033D                     l38:	
   976                           ;main.c: 69: while (1) {
   977                           
   978                           
   979                           ;main.c: 70: continue;
   980  033D  2B3D               	goto	l38
   981  033E                     __end_of_main:	
   982                           ;main.c: 71: }
   983                           ;main.c: 73: return (0);
   984                           ;	Return value of _main is never used
   985                           
   986                           
   987                           	psect	text1
   988  030B                     __ptext1:	
   989 ;; *************** function _config *****************
   990 ;; Defined at:
   991 ;;		line 50 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;		None               void
   998 ;; Registers used:
   999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    6
  1012 ;; This function calls:
  1013 ;;		_ad747_init
  1014 ;;		_port_config
  1015 ;;		_spi_config
  1016 ;;		_wiz_init
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _config
  1024  030B                     _config:	
  1025                           
  1026                           ;main.c: 52: port_config();
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1030  030B  3183  231C  3183   	fcall	_port_config
  1031                           
  1032                           ;main.c: 54: spi_config();
  1033  030E  3183  2326  3183   	fcall	_spi_config
  1034                           
  1035                           ;main.c: 56: ad747_init();
  1036  0311  3183  233E  3183   	fcall	_ad747_init
  1037                           
  1038                           ;main.c: 58: wiz_init();
  1039  0314  3180  2032         	fcall	_wiz_init
  1040                           
  1041                           ;main.c: 60: OPTION_REG = 0b00000001;
  1042  0316  3001               	movlw	1
  1043  0317  0021               	movlb	1	; select bank1
  1044  0318  0095               	movwf	21	;volatile
  1045                           
  1046                           ;main.c: 61: INTCONbits.TMR0IE = 0x01;
  1047  0319  168B               	bsf	11,5	;volatile
  1048                           
  1049                           ;main.c: 62: INTCONbits.GIE = 0x01;
  1050  031A  178B               	bsf	11,7	;volatile
  1051  031B  0008               	return
  1052  031C                     __end_of_config:	
  1053                           
  1054                           	psect	text2
  1055  0032                     __ptext2:	
  1056 ;; *************** function _wiz_init *****************
  1057 ;; Defined at:
  1058 ;;		line 59 in file "pic16f145x_wiznet.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  sock            2   19[BANK0 ] unsigned int 
  1063 ;;  i               2   17[BANK0 ] int 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;		None               void
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1076 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1077 ;;Total ram usage:        5 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    5
  1080 ;; This function calls:
  1081 ;;		_wiz_reg_read
  1082 ;;		_wiz_reg_write
  1083 ;;		_wiz_write
  1084 ;; This function is called by:
  1085 ;;		_config
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _wiz_init
  1091  0032                     _wiz_init:	
  1092                           
  1093                           ;pic16f145x_wiznet.c: 60: LATCbits.LATC3 = 1;
  1094                           
  1095                           ;incstack = 0
  1096                           ; Regs used in _wiz_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1097  0032  0022               	movlb	2	; select bank2
  1098  0033  158E               	bsf	14,3	;volatile
  1099                           
  1100                           ;pic16f145x_wiznet.c: 61: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1101  0034  3027               	movlw	39
  1102  0035  0020               	movlb	0	; select bank0
  1103  0036  00D8               	movwf	??_wiz_init
  1104  0037                     u217:	
  1105  0037  0BD8               	decfsz	??_wiz_init,f
  1106  0038  2837               	goto	u217
  1107  0039  3200               	nop2	;nop
  1108                           
  1109                           ;pic16f145x_wiznet.c: 63: wiz_reg_write(0x00, 0x00, 0x80);
  1110  003A  3000               	movlw	0
  1111  003B  0020               	movlb	0	; select bank0
  1112  003C  00CE               	movwf	wiz_reg_write@addr_hi
  1113  003D  00CF               	movwf	wiz_reg_write@addr_hi+1
  1114  003E  3000               	movlw	0
  1115  003F  00D0               	movwf	wiz_reg_write@addr_lo
  1116  0040  00D1               	movwf	wiz_reg_write@addr_lo+1
  1117  0041  3080               	movlw	128
  1118  0042  00D2               	movwf	wiz_reg_write@mosi
  1119  0043  3000               	movlw	0
  1120  0044  00D3               	movwf	wiz_reg_write@mosi+1
  1121  0045  3182  2270  3180   	fcall	_wiz_reg_write
  1122                           
  1123                           ;pic16f145x_wiznet.c: 64: _delay((unsigned long)((100)*(48000000/4000000.0)));
  1124  0048  30EF               	movlw	239
  1125  0049  0020               	movlb	0	; select bank0
  1126  004A  00D8               	movwf	??_wiz_init
  1127  004B                     u227:	
  1128  004B  3200               	nop2
  1129  004C  0BD8               	decfsz	??_wiz_init,f
  1130  004D  284B               	goto	u227
  1131  004E  3200               	nop2	;nop
  1132  004F  3200               	nop2	;nop
  1133  0050                     l741:	
  1134                           ;pic16f145x_wiznet.c: 65: while (wiz_reg_read(0x00, 0x00) & 0x80)
  1135                           
  1136  0050  3000               	movlw	0
  1137  0051  0020               	movlb	0	; select bank0
  1138  0052  00CE               	movwf	wiz_reg_read@addr_hi
  1139  0053  00CF               	movwf	wiz_reg_read@addr_hi+1
  1140  0054  3000               	movlw	0
  1141  0055  00D0               	movwf	wiz_reg_read@addr_lo
  1142  0056  00D1               	movwf	wiz_reg_read@addr_lo+1
  1143  0057  3182  223C  3180   	fcall	_wiz_reg_read
  1144  005A  0020               	movlb	0	; select bank0
  1145  005B  1FCE               	btfss	?_wiz_reg_read,7
  1146  005C  2866               	goto	l743
  1147                           
  1148                           ;pic16f145x_wiznet.c: 66: _delay((unsigned long)((100)*(48000000/4000000.0)));
  1149  005D  30EF               	movlw	239
  1150  005E  0020               	movlb	0	; select bank0
  1151  005F  00D8               	movwf	??_wiz_init
  1152  0060                     u237:	
  1153  0060  3200               	nop2
  1154  0061  0BD8               	decfsz	??_wiz_init,f
  1155  0062  2860               	goto	u237
  1156  0063  3200               	nop2	;nop
  1157  0064  3200               	nop2	;nop
  1158  0065  2850               	goto	l741
  1159  0066                     l743:	
  1160                           
  1161                           ;pic16f145x_wiznet.c: 69: wiz_reg_write(0x00, 0x16, 0x00);
  1162  0066  3000               	movlw	0
  1163  0067  00CE               	movwf	wiz_reg_write@addr_hi
  1164  0068  00CF               	movwf	wiz_reg_write@addr_hi+1
  1165  0069  3016               	movlw	22
  1166  006A  00D0               	movwf	wiz_reg_write@addr_lo
  1167  006B  3000               	movlw	0
  1168  006C  00D1               	movwf	wiz_reg_write@addr_lo+1
  1169  006D  3000               	movlw	0
  1170  006E  00D2               	movwf	wiz_reg_write@mosi
  1171  006F  00D3               	movwf	wiz_reg_write@mosi+1
  1172  0070  3182  2270  3180   	fcall	_wiz_reg_write
  1173                           
  1174                           ;pic16f145x_wiznet.c: 72: wiz_reg_write(0x00, 0x00, 0x00);
  1175  0073  3000               	movlw	0
  1176  0074  0020               	movlb	0	; select bank0
  1177  0075  00CE               	movwf	wiz_reg_write@addr_hi
  1178  0076  00CF               	movwf	wiz_reg_write@addr_hi+1
  1179  0077  3000               	movlw	0
  1180  0078  00D0               	movwf	wiz_reg_write@addr_lo
  1181  0079  00D1               	movwf	wiz_reg_write@addr_lo+1
  1182  007A  3000               	movlw	0
  1183  007B  00D2               	movwf	wiz_reg_write@mosi
  1184  007C  00D3               	movwf	wiz_reg_write@mosi+1
  1185  007D  3182  2270  3180   	fcall	_wiz_reg_write
  1186                           
  1187                           ;pic16f145x_wiznet.c: 75: wiz_write(0x00, 0x05, subnet, 0x04);
  1188  0080  3000               	movlw	0
  1189  0081  0020               	movlb	0	; select bank0
  1190  0082  00CE               	movwf	wiz_write@addr_hi
  1191  0083  00CF               	movwf	wiz_write@addr_hi+1
  1192  0084  3005               	movlw	5
  1193  0085  00D0               	movwf	wiz_write@addr_lo
  1194  0086  3000               	movlw	0
  1195  0087  00D1               	movwf	wiz_write@addr_lo+1
  1196  0088  303C               	movlw	(low (_subnet| 0))& (0+255)
  1197  0089  00D8               	movwf	??_wiz_init
  1198  008A  0858               	movf	??_wiz_init,w
  1199  008B  00D2               	movwf	wiz_write@mosi
  1200  008C  3004               	movlw	4
  1201  008D  00D3               	movwf	wiz_write@length
  1202  008E  3000               	movlw	0
  1203  008F  00D4               	movwf	wiz_write@length+1
  1204  0090  3181  21BC  3180   	fcall	_wiz_write
  1205                           
  1206                           ;pic16f145x_wiznet.c: 78: wiz_write(0x00, 0x01, gateway, 0x04);
  1207  0093  3000               	movlw	0
  1208  0094  0020               	movlb	0	; select bank0
  1209  0095  00CE               	movwf	wiz_write@addr_hi
  1210  0096  00CF               	movwf	wiz_write@addr_hi+1
  1211  0097  3001               	movlw	1
  1212  0098  00D0               	movwf	wiz_write@addr_lo
  1213  0099  3000               	movlw	0
  1214  009A  00D1               	movwf	wiz_write@addr_lo+1
  1215  009B  3063               	movlw	(low (_gateway| 0))& (0+255)
  1216  009C  00D8               	movwf	??_wiz_init
  1217  009D  0858               	movf	??_wiz_init,w
  1218  009E  00D2               	movwf	wiz_write@mosi
  1219  009F  3004               	movlw	4
  1220  00A0  00D3               	movwf	wiz_write@length
  1221  00A1  3000               	movlw	0
  1222  00A2  00D4               	movwf	wiz_write@length+1
  1223  00A3  3181  21BC  3180   	fcall	_wiz_write
  1224                           
  1225                           ;pic16f145x_wiznet.c: 81: wiz_write(0x00, 0x0F, ip, 0x04);
  1226  00A6  3000               	movlw	0
  1227  00A7  0020               	movlb	0	; select bank0
  1228  00A8  00CE               	movwf	wiz_write@addr_hi
  1229  00A9  00CF               	movwf	wiz_write@addr_hi+1
  1230  00AA  300F               	movlw	15
  1231  00AB  00D0               	movwf	wiz_write@addr_lo
  1232  00AC  3000               	movlw	0
  1233  00AD  00D1               	movwf	wiz_write@addr_lo+1
  1234  00AE  302C               	movlw	(low (_ip| 0))& (0+255)
  1235  00AF  00D8               	movwf	??_wiz_init
  1236  00B0  0858               	movf	??_wiz_init,w
  1237  00B1  00D2               	movwf	wiz_write@mosi
  1238  00B2  3004               	movlw	4
  1239  00B3  00D3               	movwf	wiz_write@length
  1240  00B4  3000               	movlw	0
  1241  00B5  00D4               	movwf	wiz_write@length+1
  1242  00B6  3181  21BC  3180   	fcall	_wiz_write
  1243                           
  1244                           ;pic16f145x_wiznet.c: 84: wiz_write(0x00, 0x09, mac, 0x06);
  1245  00B9  3000               	movlw	0
  1246  00BA  0020               	movlb	0	; select bank0
  1247  00BB  00CE               	movwf	wiz_write@addr_hi
  1248  00BC  00CF               	movwf	wiz_write@addr_hi+1
  1249  00BD  3009               	movlw	9
  1250  00BE  00D0               	movwf	wiz_write@addr_lo
  1251  00BF  3000               	movlw	0
  1252  00C0  00D1               	movwf	wiz_write@addr_lo+1
  1253  00C1  3020               	movlw	(low (_mac| 0))& (0+255)
  1254  00C2  00D8               	movwf	??_wiz_init
  1255  00C3  0858               	movf	??_wiz_init,w
  1256  00C4  00D2               	movwf	wiz_write@mosi
  1257  00C5  3006               	movlw	6
  1258  00C6  00D3               	movwf	wiz_write@length
  1259  00C7  3000               	movlw	0
  1260  00C8  00D4               	movwf	wiz_write@length+1
  1261  00C9  3181  21BC  3180   	fcall	_wiz_write
  1262                           
  1263                           ;pic16f145x_wiznet.c: 89: wiz_reg_write(0x00, 0x35, 0x00);
  1264  00CC  3000               	movlw	0
  1265  00CD  0020               	movlb	0	; select bank0
  1266  00CE  00CE               	movwf	wiz_reg_write@addr_hi
  1267  00CF  00CF               	movwf	wiz_reg_write@addr_hi+1
  1268  00D0  3035               	movlw	53
  1269  00D1  00D0               	movwf	wiz_reg_write@addr_lo
  1270  00D2  3000               	movlw	0
  1271  00D3  00D1               	movwf	wiz_reg_write@addr_lo+1
  1272  00D4  3000               	movlw	0
  1273  00D5  00D2               	movwf	wiz_reg_write@mosi
  1274  00D6  00D3               	movwf	wiz_reg_write@mosi+1
  1275  00D7  3182  2270  3180   	fcall	_wiz_reg_write
  1276                           
  1277                           ;pic16f145x_wiznet.c: 90: wiz_reg_write(0x00, 0x36, 0x00);
  1278  00DA  3000               	movlw	0
  1279  00DB  0020               	movlb	0	; select bank0
  1280  00DC  00CE               	movwf	wiz_reg_write@addr_hi
  1281  00DD  00CF               	movwf	wiz_reg_write@addr_hi+1
  1282  00DE  3036               	movlw	54
  1283  00DF  00D0               	movwf	wiz_reg_write@addr_lo
  1284  00E0  3000               	movlw	0
  1285  00E1  00D1               	movwf	wiz_reg_write@addr_lo+1
  1286  00E2  3000               	movlw	0
  1287  00E3  00D2               	movwf	wiz_reg_write@mosi
  1288  00E4  00D3               	movwf	wiz_reg_write@mosi+1
  1289  00E5  3182  2270  3180   	fcall	_wiz_reg_write
  1290                           
  1291                           ;pic16f145x_wiznet.c: 92: int i;
  1292                           ;pic16f145x_wiznet.c: 93: unsigned int sock;
  1293                           ;pic16f145x_wiznet.c: 95: for (i=0; i < 8; i++) {
  1294  00E8  0020               	movlb	0	; select bank0
  1295  00E9  01D9               	clrf	wiz_init@i
  1296  00EA  01DA               	clrf	wiz_init@i+1
  1297  00EB  085A               	movf	wiz_init@i+1,w
  1298  00EC  3A80               	xorlw	128
  1299  00ED  00D8               	movwf	??_wiz_init
  1300  00EE  3080               	movlw	128
  1301  00EF  0258               	subwf	??_wiz_init,w
  1302  00F0  3008               	movlw	8
  1303  00F1  1903               	btfsc	3,2
  1304  00F2  0259               	subwf	wiz_init@i,w
  1305  00F3  1803               	btfsc	3,0
  1306  00F4  2928               	goto	l769
  1307  00F5                     l759:	
  1308                           
  1309                           ;pic16f145x_wiznet.c: 96: sock = 0x40+i;
  1310  00F5  0020               	movlb	0	; select bank0
  1311  00F6  0859               	movf	wiz_init@i,w
  1312  00F7  3E40               	addlw	64
  1313  00F8  00DB               	movwf	wiz_init@sock
  1314  00F9  3000               	movlw	0
  1315  00FA  3D5A               	addwfc	wiz_init@i+1,w
  1316  00FB  00DC               	movwf	wiz_init@sock+1
  1317                           
  1318                           ;pic16f145x_wiznet.c: 97: wiz_reg_write(sock,0x01, 0x10);
  1319  00FC  085C               	movf	wiz_init@sock+1,w
  1320  00FD  00CF               	movwf	wiz_reg_write@addr_hi+1
  1321  00FE  085B               	movf	wiz_init@sock,w
  1322  00FF  00CE               	movwf	wiz_reg_write@addr_hi
  1323  0100  3001               	movlw	1
  1324  0101  00D0               	movwf	wiz_reg_write@addr_lo
  1325  0102  3000               	movlw	0
  1326  0103  00D1               	movwf	wiz_reg_write@addr_lo+1
  1327  0104  3010               	movlw	16
  1328  0105  00D2               	movwf	wiz_reg_write@mosi
  1329  0106  3000               	movlw	0
  1330  0107  00D3               	movwf	wiz_reg_write@mosi+1
  1331  0108  3182  2270  3180   	fcall	_wiz_reg_write
  1332                           
  1333                           ;pic16f145x_wiznet.c: 98: wiz_reg_write(sock,0x00, 0x00);
  1334  010B  0020               	movlb	0	; select bank0
  1335  010C  085C               	movf	wiz_init@sock+1,w
  1336  010D  00CF               	movwf	wiz_reg_write@addr_hi+1
  1337  010E  085B               	movf	wiz_init@sock,w
  1338  010F  00CE               	movwf	wiz_reg_write@addr_hi
  1339  0110  3000               	movlw	0
  1340  0111  00D0               	movwf	wiz_reg_write@addr_lo
  1341  0112  00D1               	movwf	wiz_reg_write@addr_lo+1
  1342  0113  3000               	movlw	0
  1343  0114  00D2               	movwf	wiz_reg_write@mosi
  1344  0115  00D3               	movwf	wiz_reg_write@mosi+1
  1345  0116  3182  2270  3180   	fcall	_wiz_reg_write
  1346  0119  3001               	movlw	1
  1347  011A  0020               	movlb	0	; select bank0
  1348  011B  07D9               	addwf	wiz_init@i,f
  1349  011C  3000               	movlw	0
  1350  011D  3DDA               	addwfc	wiz_init@i+1,f
  1351  011E  085A               	movf	wiz_init@i+1,w
  1352  011F  3A80               	xorlw	128
  1353  0120  00D8               	movwf	??_wiz_init
  1354  0121  3080               	movlw	128
  1355  0122  0258               	subwf	??_wiz_init,w
  1356  0123  3008               	movlw	8
  1357  0124  1903               	btfsc	3,2
  1358  0125  0259               	subwf	wiz_init@i,w
  1359  0126  1C03               	skipc
  1360  0127  28F5               	goto	l759
  1361  0128                     l769:	
  1362                           
  1363                           ;pic16f145x_wiznet.c: 99: }
  1364                           ;pic16f145x_wiznet.c: 102: for (i=0; i < 8; i++) {
  1365  0128  0020               	movlb	0	; select bank0
  1366  0129  01D9               	clrf	wiz_init@i
  1367  012A  01DA               	clrf	wiz_init@i+1
  1368  012B  085A               	movf	wiz_init@i+1,w
  1369  012C  3A80               	xorlw	128
  1370  012D  00D8               	movwf	??_wiz_init
  1371  012E  3080               	movlw	128
  1372  012F  0258               	subwf	??_wiz_init,w
  1373  0130  3008               	movlw	8
  1374  0131  1903               	btfsc	3,2
  1375  0132  0259               	subwf	wiz_init@i,w
  1376  0133  1803               	btfsc	3,0
  1377  0134  29B3               	goto	l793
  1378  0135                     l775:	
  1379                           
  1380                           ;pic16f145x_wiznet.c: 103: sock = 0x40+i;
  1381  0135  0020               	movlb	0	; select bank0
  1382  0136  0859               	movf	wiz_init@i,w
  1383  0137  3E40               	addlw	64
  1384  0138  00DB               	movwf	wiz_init@sock
  1385  0139  3000               	movlw	0
  1386  013A  3D5A               	addwfc	wiz_init@i+1,w
  1387  013B  00DC               	movwf	wiz_init@sock+1
  1388                           
  1389                           ;pic16f145x_wiznet.c: 104: wiz_reg_write(sock,0x00, 0x02);
  1390  013C  085C               	movf	wiz_init@sock+1,w
  1391  013D  00CF               	movwf	wiz_reg_write@addr_hi+1
  1392  013E  085B               	movf	wiz_init@sock,w
  1393  013F  00CE               	movwf	wiz_reg_write@addr_hi
  1394  0140  3000               	movlw	0
  1395  0141  00D0               	movwf	wiz_reg_write@addr_lo
  1396  0142  00D1               	movwf	wiz_reg_write@addr_lo+1
  1397  0143  3002               	movlw	2
  1398  0144  00D2               	movwf	wiz_reg_write@mosi
  1399  0145  3000               	movlw	0
  1400  0146  00D3               	movwf	wiz_reg_write@mosi+1
  1401  0147  3182  2270  3180   	fcall	_wiz_reg_write
  1402                           
  1403                           ;pic16f145x_wiznet.c: 105: wiz_reg_write(sock,0x04, 0x13);
  1404  014A  0020               	movlb	0	; select bank0
  1405  014B  085C               	movf	wiz_init@sock+1,w
  1406  014C  00CF               	movwf	wiz_reg_write@addr_hi+1
  1407  014D  085B               	movf	wiz_init@sock,w
  1408  014E  00CE               	movwf	wiz_reg_write@addr_hi
  1409  014F  3004               	movlw	4
  1410  0150  00D0               	movwf	wiz_reg_write@addr_lo
  1411  0151  3000               	movlw	0
  1412  0152  00D1               	movwf	wiz_reg_write@addr_lo+1
  1413  0153  3013               	movlw	19
  1414  0154  00D2               	movwf	wiz_reg_write@mosi
  1415  0155  3000               	movlw	0
  1416  0156  00D3               	movwf	wiz_reg_write@mosi+1
  1417  0157  3182  2270  3180   	fcall	_wiz_reg_write
  1418                           
  1419                           ;pic16f145x_wiznet.c: 106: wiz_reg_write(sock,0x05, (0x81+i));
  1420  015A  0020               	movlb	0	; select bank0
  1421  015B  085C               	movf	wiz_init@sock+1,w
  1422  015C  00CF               	movwf	wiz_reg_write@addr_hi+1
  1423  015D  085B               	movf	wiz_init@sock,w
  1424  015E  00CE               	movwf	wiz_reg_write@addr_hi
  1425  015F  3005               	movlw	5
  1426  0160  00D0               	movwf	wiz_reg_write@addr_lo
  1427  0161  3000               	movlw	0
  1428  0162  00D1               	movwf	wiz_reg_write@addr_lo+1
  1429  0163  0859               	movf	wiz_init@i,w
  1430  0164  3E81               	addlw	129
  1431  0165  00D2               	movwf	wiz_reg_write@mosi
  1432  0166  3000               	movlw	0
  1433  0167  3D5A               	addwfc	wiz_init@i+1,w
  1434  0168  00D3               	movwf	wiz_reg_write@mosi+1
  1435  0169  3182  2270  3180   	fcall	_wiz_reg_write
  1436                           
  1437                           ;pic16f145x_wiznet.c: 108: wiz_write(sock, 0x0C, source_ip, 0x04);
  1438  016C  0020               	movlb	0	; select bank0
  1439  016D  085C               	movf	wiz_init@sock+1,w
  1440  016E  00CF               	movwf	wiz_write@addr_hi+1
  1441  016F  085B               	movf	wiz_init@sock,w
  1442  0170  00CE               	movwf	wiz_write@addr_hi
  1443  0171  300C               	movlw	12
  1444  0172  00D0               	movwf	wiz_write@addr_lo
  1445  0173  3000               	movlw	0
  1446  0174  00D1               	movwf	wiz_write@addr_lo+1
  1447  0175  3034               	movlw	(low (_source_ip| 0))& (0+255)
  1448  0176  00D8               	movwf	??_wiz_init
  1449  0177  0858               	movf	??_wiz_init,w
  1450  0178  00D2               	movwf	wiz_write@mosi
  1451  0179  3004               	movlw	4
  1452  017A  00D3               	movwf	wiz_write@length
  1453  017B  3000               	movlw	0
  1454  017C  00D4               	movwf	wiz_write@length+1
  1455  017D  3181  21BC  3180   	fcall	_wiz_write
  1456                           
  1457                           ;pic16f145x_wiznet.c: 110: wiz_write(sock,0x10, source_port, 0x02);
  1458  0180  0020               	movlb	0	; select bank0
  1459  0181  085C               	movf	wiz_init@sock+1,w
  1460  0182  00CF               	movwf	wiz_write@addr_hi+1
  1461  0183  085B               	movf	wiz_init@sock,w
  1462  0184  00CE               	movwf	wiz_write@addr_hi
  1463  0185  3010               	movlw	16
  1464  0186  00D0               	movwf	wiz_write@addr_lo
  1465  0187  3000               	movlw	0
  1466  0188  00D1               	movwf	wiz_write@addr_lo+1
  1467  0189  3044               	movlw	(low (_source_port| 0))& (0+255)
  1468  018A  00D8               	movwf	??_wiz_init
  1469  018B  0858               	movf	??_wiz_init,w
  1470  018C  00D2               	movwf	wiz_write@mosi
  1471  018D  3002               	movlw	2
  1472  018E  00D3               	movwf	wiz_write@length
  1473  018F  3000               	movlw	0
  1474  0190  00D4               	movwf	wiz_write@length+1
  1475  0191  3181  21BC  3180   	fcall	_wiz_write
  1476                           
  1477                           ;pic16f145x_wiznet.c: 112: wiz_reg_write(sock,0x01, 0x01);
  1478  0194  0020               	movlb	0	; select bank0
  1479  0195  085C               	movf	wiz_init@sock+1,w
  1480  0196  00CF               	movwf	wiz_reg_write@addr_hi+1
  1481  0197  085B               	movf	wiz_init@sock,w
  1482  0198  00CE               	movwf	wiz_reg_write@addr_hi
  1483  0199  3001               	movlw	1
  1484  019A  00D0               	movwf	wiz_reg_write@addr_lo
  1485  019B  3000               	movlw	0
  1486  019C  00D1               	movwf	wiz_reg_write@addr_lo+1
  1487  019D  3001               	movlw	1
  1488  019E  00D2               	movwf	wiz_reg_write@mosi
  1489  019F  3000               	movlw	0
  1490  01A0  00D3               	movwf	wiz_reg_write@mosi+1
  1491  01A1  3182  2270  3180   	fcall	_wiz_reg_write
  1492  01A4  3001               	movlw	1
  1493  01A5  0020               	movlb	0	; select bank0
  1494  01A6  07D9               	addwf	wiz_init@i,f
  1495  01A7  3000               	movlw	0
  1496  01A8  3DDA               	addwfc	wiz_init@i+1,f
  1497  01A9  085A               	movf	wiz_init@i+1,w
  1498  01AA  3A80               	xorlw	128
  1499  01AB  00D8               	movwf	??_wiz_init
  1500  01AC  3080               	movlw	128
  1501  01AD  0258               	subwf	??_wiz_init,w
  1502  01AE  3008               	movlw	8
  1503  01AF  1903               	btfsc	3,2
  1504  01B0  0259               	subwf	wiz_init@i,w
  1505  01B1  1C03               	skipc
  1506  01B2  2935               	goto	l775
  1507  01B3                     l793:	
  1508                           
  1509                           ;pic16f145x_wiznet.c: 113: }
  1510                           ;pic16f145x_wiznet.c: 116: _delay((unsigned long)((100)*(48000000/4000000.0)));
  1511  01B3  30EF               	movlw	239
  1512  01B4  0020               	movlb	0	; select bank0
  1513  01B5  00D8               	movwf	??_wiz_init
  1514  01B6                     u247:	
  1515  01B6  3200               	nop2
  1516  01B7  0BD8               	decfsz	??_wiz_init,f
  1517  01B8  29B6               	goto	u247
  1518  01B9  3200               	nop2	;nop
  1519  01BA  3200               	nop2	;nop
  1520  01BB  0008               	return
  1521  01BC                     __end_of_wiz_init:	
  1522                           
  1523                           	psect	text3
  1524  01BC                     __ptext3:	
  1525 ;; *************** function _wiz_write *****************
  1526 ;; Defined at:
  1527 ;;		line 40 in file "pic16f145x_wiznet.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  addr_hi         2    6[BANK0 ] unsigned int 
  1530 ;;  addr_lo         2    8[BANK0 ] unsigned int 
  1531 ;;  mosi            1   10[BANK0 ] PTR unsigned int 
  1532 ;;		 -> source_port(4), source_ip(8), mac(12), ip(8), 
  1533 ;;		 -> gateway(8), subnet(8), 
  1534 ;;  length          2   11[BANK0 ] unsigned int 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  i               2   14[BANK0 ] int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1546 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;Total ram usage:       10 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    4
  1553 ;; This function calls:
  1554 ;;		_spi
  1555 ;; This function is called by:
  1556 ;;		_wiz_init
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _wiz_write
  1562  01BC                     _wiz_write:	
  1563                           
  1564                           ;pic16f145x_wiznet.c: 42: LATCbits.LATC3 = 0;
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _wiz_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1568  01BC  0022               	movlb	2	; select bank2
  1569  01BD  118E               	bcf	14,3	;volatile
  1570                           
  1571                           ;pic16f145x_wiznet.c: 45: spi(addr_hi);
  1572  01BE  0020               	movlb	0	; select bank0
  1573  01BF  084F               	movf	wiz_write@addr_hi+1,w
  1574  01C0  00C9               	movwf	spi@mosi+1
  1575  01C1  084E               	movf	wiz_write@addr_hi,w
  1576  01C2  00C8               	movwf	spi@mosi
  1577  01C3  3182  22E4  3181   	fcall	_spi
  1578                           
  1579                           ;pic16f145x_wiznet.c: 46: spi(addr_lo);
  1580  01C6  0020               	movlb	0	; select bank0
  1581  01C7  0851               	movf	wiz_write@addr_lo+1,w
  1582  01C8  00C9               	movwf	spi@mosi+1
  1583  01C9  0850               	movf	wiz_write@addr_lo,w
  1584  01CA  00C8               	movwf	spi@mosi
  1585  01CB  3182  22E4  3181   	fcall	_spi
  1586                           
  1587                           ;pic16f145x_wiznet.c: 49: spi(0x80);
  1588  01CE  3080               	movlw	128
  1589  01CF  0020               	movlb	0	; select bank0
  1590  01D0  00C8               	movwf	spi@mosi
  1591  01D1  3000               	movlw	0
  1592  01D2  00C9               	movwf	spi@mosi+1
  1593  01D3  3182  22E4  3181   	fcall	_spi
  1594                           
  1595                           ;pic16f145x_wiznet.c: 50: spi(length);
  1596  01D6  0020               	movlb	0	; select bank0
  1597  01D7  0854               	movf	wiz_write@length+1,w
  1598  01D8  00C9               	movwf	spi@mosi+1
  1599  01D9  0853               	movf	wiz_write@length,w
  1600  01DA  00C8               	movwf	spi@mosi
  1601  01DB  3182  22E4  3181   	fcall	_spi
  1602                           
  1603                           ;pic16f145x_wiznet.c: 52: for(int i=0;i<length;i++)
  1604  01DE  0020               	movlb	0	; select bank0
  1605  01DF  01D6               	clrf	wiz_write@i
  1606  01E0  01D7               	clrf	wiz_write@i+1
  1607  01E1                     l713:	
  1608  01E1  0854               	movf	wiz_write@length+1,w
  1609  01E2  0257               	subwf	wiz_write@i+1,w
  1610  01E3  1D03               	skipz
  1611  01E4  29E7               	goto	u125
  1612  01E5  0853               	movf	wiz_write@length,w
  1613  01E6  0256               	subwf	wiz_write@i,w
  1614  01E7                     u125:	
  1615  01E7  1803               	btfsc	3,0
  1616  01E8  29FC               	goto	l94
  1617                           
  1618                           ;pic16f145x_wiznet.c: 53: spi(mosi[i]);
  1619  01E9  3556               	lslf	wiz_write@i,w
  1620  01EA  0752               	addwf	wiz_write@mosi,w
  1621  01EB  00D5               	movwf	??_wiz_write
  1622  01EC  0855               	movf	??_wiz_write,w
  1623  01ED  0086               	movwf	6
  1624  01EE  0187               	clrf	7
  1625  01EF  3F40               	moviw [0]fsr1
  1626  01F0  00C8               	movwf	spi@mosi
  1627  01F1  3F41               	moviw [1]fsr1
  1628  01F2  00C9               	movwf	spi@mosi+1
  1629  01F3  3182  22E4  3181   	fcall	_spi
  1630  01F6  3001               	movlw	1
  1631  01F7  0020               	movlb	0	; select bank0
  1632  01F8  07D6               	addwf	wiz_write@i,f
  1633  01F9  3000               	movlw	0
  1634  01FA  3DD7               	addwfc	wiz_write@i+1,f
  1635  01FB  29E1               	goto	l713
  1636  01FC                     l94:	
  1637                           
  1638                           ;pic16f145x_wiznet.c: 55: LATCbits.LATC3 = 1;
  1639  01FC  0022               	movlb	2	; select bank2
  1640  01FD  158E               	bsf	14,3	;volatile
  1641                           
  1642                           ;pic16f145x_wiznet.c: 56: _delay((unsigned long)((10)*(48000000/4000000.0)));
  1643  01FE  3027               	movlw	39
  1644  01FF  0020               	movlb	0	; select bank0
  1645  0200  00D5               	movwf	??_wiz_write
  1646  0201                     u257:	
  1647  0201  0BD5               	decfsz	??_wiz_write,f
  1648  0202  2A01               	goto	u257
  1649  0203  3200               	nop2	;nop
  1650  0204  0008               	return
  1651  0205                     __end_of_wiz_write:	
  1652                           
  1653                           	psect	text4
  1654  0270                     __ptext4:	
  1655 ;; *************** function _wiz_reg_write *****************
  1656 ;; Defined at:
  1657 ;;		line 20 in file "pic16f145x_wiznet.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  addr_hi         2    6[BANK0 ] unsigned int 
  1660 ;;  addr_lo         2    8[BANK0 ] unsigned int 
  1661 ;;  mosi            2   10[BANK0 ] unsigned int 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;		None               void
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1673 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;Total ram usage:        6 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    4
  1680 ;; This function calls:
  1681 ;;		_spi
  1682 ;; This function is called by:
  1683 ;;		_wiz_init
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _wiz_reg_write
  1689  0270                     _wiz_reg_write:	
  1690                           
  1691                           ;pic16f145x_wiznet.c: 22: LATCbits.LATC3 = 0;
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _wiz_reg_write: [wreg+status,2+status,0+pclath+cstack]
  1695  0270  0022               	movlb	2	; select bank2
  1696  0271  118E               	bcf	14,3	;volatile
  1697                           
  1698                           ;pic16f145x_wiznet.c: 24: spi(addr_hi);
  1699  0272  0020               	movlb	0	; select bank0
  1700  0273  084F               	movf	wiz_reg_write@addr_hi+1,w
  1701  0274  00C9               	movwf	spi@mosi+1
  1702  0275  084E               	movf	wiz_reg_write@addr_hi,w
  1703  0276  00C8               	movwf	spi@mosi
  1704  0277  3182  22E4  3182   	fcall	_spi
  1705                           
  1706                           ;pic16f145x_wiznet.c: 25: spi(addr_lo);
  1707  027A  0020               	movlb	0	; select bank0
  1708  027B  0851               	movf	wiz_reg_write@addr_lo+1,w
  1709  027C  00C9               	movwf	spi@mosi+1
  1710  027D  0850               	movf	wiz_reg_write@addr_lo,w
  1711  027E  00C8               	movwf	spi@mosi
  1712  027F  3182  22E4  3182   	fcall	_spi
  1713                           
  1714                           ;pic16f145x_wiznet.c: 28: spi(0x80);
  1715  0282  3080               	movlw	128
  1716  0283  0020               	movlb	0	; select bank0
  1717  0284  00C8               	movwf	spi@mosi
  1718  0285  3000               	movlw	0
  1719  0286  00C9               	movwf	spi@mosi+1
  1720  0287  3182  22E4  3182   	fcall	_spi
  1721                           
  1722                           ;pic16f145x_wiznet.c: 29: spi(0x01);
  1723  028A  3001               	movlw	1
  1724  028B  0020               	movlb	0	; select bank0
  1725  028C  00C8               	movwf	spi@mosi
  1726  028D  3000               	movlw	0
  1727  028E  00C9               	movwf	spi@mosi+1
  1728  028F  3182  22E4  3182   	fcall	_spi
  1729                           
  1730                           ;pic16f145x_wiznet.c: 31: spi(mosi);
  1731  0292  0020               	movlb	0	; select bank0
  1732  0293  0853               	movf	wiz_reg_write@mosi+1,w
  1733  0294  00C9               	movwf	spi@mosi+1
  1734  0295  0852               	movf	wiz_reg_write@mosi,w
  1735  0296  00C8               	movwf	spi@mosi
  1736  0297  3182  22E4         	fcall	_spi
  1737                           
  1738                           ;pic16f145x_wiznet.c: 32: LATCbits.LATC3 = 1;
  1739  0299  0022               	movlb	2	; select bank2
  1740  029A  158E               	bsf	14,3	;volatile
  1741  029B  0008               	return
  1742  029C                     __end_of_wiz_reg_write:	
  1743                           
  1744                           	psect	text5
  1745  023C                     __ptext5:	
  1746 ;; *************** function _wiz_reg_read *****************
  1747 ;; Defined at:
  1748 ;;		line 3 in file "pic16f145x_wiznet.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  addr_hi         2    6[BANK0 ] unsigned int 
  1751 ;;  addr_lo         2    8[BANK0 ] unsigned int 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  miso            2   10[BANK0 ] unsigned int 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2    6[BANK0 ] unsigned int 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;Total ram usage:        6 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    4
  1770 ;; This function calls:
  1771 ;;		_spi
  1772 ;; This function is called by:
  1773 ;;		_wiz_init
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _wiz_reg_read
  1779  023C                     _wiz_reg_read:	
  1780                           
  1781                           ;pic16f145x_wiznet.c: 5: LATCbits.LATC3 = 0;
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _wiz_reg_read: [wreg+status,2+status,0+pclath+cstack]
  1785  023C  0022               	movlb	2	; select bank2
  1786  023D  118E               	bcf	14,3	;volatile
  1787                           
  1788                           ;pic16f145x_wiznet.c: 7: spi(addr_hi);
  1789  023E  0020               	movlb	0	; select bank0
  1790  023F  084F               	movf	wiz_reg_read@addr_hi+1,w
  1791  0240  00C9               	movwf	spi@mosi+1
  1792  0241  084E               	movf	wiz_reg_read@addr_hi,w
  1793  0242  00C8               	movwf	spi@mosi
  1794  0243  3182  22E4  3182   	fcall	_spi
  1795                           
  1796                           ;pic16f145x_wiznet.c: 8: spi(addr_lo);
  1797  0246  0020               	movlb	0	; select bank0
  1798  0247  0851               	movf	wiz_reg_read@addr_lo+1,w
  1799  0248  00C9               	movwf	spi@mosi+1
  1800  0249  0850               	movf	wiz_reg_read@addr_lo,w
  1801  024A  00C8               	movwf	spi@mosi
  1802  024B  3182  22E4  3182   	fcall	_spi
  1803                           
  1804                           ;pic16f145x_wiznet.c: 11: spi(0x00);
  1805  024E  3000               	movlw	0
  1806  024F  0020               	movlb	0	; select bank0
  1807  0250  00C8               	movwf	spi@mosi
  1808  0251  00C9               	movwf	spi@mosi+1
  1809  0252  3182  22E4  3182   	fcall	_spi
  1810                           
  1811                           ;pic16f145x_wiznet.c: 12: spi(0x01);
  1812  0255  3001               	movlw	1
  1813  0256  0020               	movlb	0	; select bank0
  1814  0257  00C8               	movwf	spi@mosi
  1815  0258  3000               	movlw	0
  1816  0259  00C9               	movwf	spi@mosi+1
  1817  025A  3182  22E4  3182   	fcall	_spi
  1818                           
  1819                           ;pic16f145x_wiznet.c: 14: unsigned int miso = spi(0x00);
  1820  025D  3000               	movlw	0
  1821  025E  0020               	movlb	0	; select bank0
  1822  025F  00C8               	movwf	spi@mosi
  1823  0260  00C9               	movwf	spi@mosi+1
  1824  0261  3182  22E4         	fcall	_spi
  1825  0263  0020               	movlb	0	; select bank0
  1826  0264  0849               	movf	?_spi+1,w
  1827  0265  00D3               	movwf	wiz_reg_read@miso+1
  1828  0266  0848               	movf	?_spi,w
  1829  0267  00D2               	movwf	wiz_reg_read@miso
  1830                           
  1831                           ;pic16f145x_wiznet.c: 15: LATCbits.LATC3 = 1;
  1832  0268  0022               	movlb	2	; select bank2
  1833  0269  158E               	bsf	14,3	;volatile
  1834                           
  1835                           ;pic16f145x_wiznet.c: 17: return (miso);
  1836  026A  0020               	movlb	0	; select bank0
  1837  026B  0853               	movf	wiz_reg_read@miso+1,w
  1838  026C  00CF               	movwf	?_wiz_reg_read+1
  1839  026D  0852               	movf	wiz_reg_read@miso,w
  1840  026E  00CE               	movwf	?_wiz_reg_read
  1841  026F  0008               	return
  1842  0270                     __end_of_wiz_reg_read:	
  1843                           
  1844                           	psect	text6
  1845  02E4                     __ptext6:	
  1846 ;; *************** function _spi *****************
  1847 ;; Defined at:
  1848 ;;		line 26 in file "pic16f145x_spi.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  mosi            2    0[BANK0 ] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  miso            2    4[BANK0 ] unsigned int 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2    0[BANK0 ] unsigned int 
  1855 ;; Registers used:
  1856 ;;		wreg
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1865 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1866 ;;Total ram usage:        6 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_wiz_reg_read
  1873 ;;		_wiz_reg_write
  1874 ;;		_wiz_write
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _spi
  1880  02E4                     _spi:	
  1881                           
  1882                           ;pic16f145x_spi.c: 28: unsigned int miso;
  1883                           ;pic16f145x_spi.c: 30: PIR1bits.SSP1IF=0;
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _spi: [wreg]
  1887  02E4  0020               	movlb	0	; select bank0
  1888  02E5  1191               	bcf	17,3	;volatile
  1889                           
  1890                           ;pic16f145x_spi.c: 31: SSPBUF = mosi;
  1891  02E6  0848               	movf	spi@mosi,w
  1892  02E7  0024               	movlb	4	; select bank4
  1893  02E8  0091               	movwf	17	;volatile
  1894  02E9                     l59:	
  1895                           ;pic16f145x_spi.c: 32: while(!SSPSTATbits.BF);
  1896                           
  1897  02E9  1C14               	btfss	20,0	;volatile
  1898  02EA  2AE9               	goto	l59
  1899                           
  1900                           ;pic16f145x_spi.c: 33: miso = SSPBUF;
  1901  02EB  0811               	movf	17,w	;volatile
  1902  02EC  0020               	movlb	0	; select bank0
  1903  02ED  00CA               	movwf	??_spi
  1904  02EE  01CB               	clrf	??_spi+1
  1905  02EF  084A               	movf	??_spi,w
  1906  02F0  00CC               	movwf	spi@miso
  1907  02F1  084B               	movf	??_spi+1,w
  1908  02F2  00CD               	movwf	spi@miso+1
  1909                           
  1910                           ;pic16f145x_spi.c: 34: return (miso);
  1911  02F3  084D               	movf	spi@miso+1,w
  1912  02F4  00C9               	movwf	?_spi+1
  1913  02F5  084C               	movf	spi@miso,w
  1914  02F6  00C8               	movwf	?_spi
  1915  02F7  0008               	return
  1916  02F8                     __end_of_spi:	
  1917                           
  1918                           	psect	text7
  1919  0326                     __ptext7:	
  1920 ;; *************** function _spi_config *****************
  1921 ;; Defined at:
  1922 ;;		line 4 in file "pic16f145x_spi.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    3
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_config
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _spi_config
  1952  0326                     _spi_config:	
  1953                           
  1954                           ;pic16f145x_spi.c: 15: SSPCONbits.SSPM = 0x00;
  1955                           
  1956                           ;incstack = 0
  1957                           ; Regs used in _spi_config: [wreg+status,2+status,0]
  1958  0326  30F0               	movlw	-16
  1959  0327  0024               	movlb	4	; select bank4
  1960  0328  0595               	andwf	21,f	;volatile
  1961                           
  1962                           ;pic16f145x_spi.c: 16: SSPCONbits.CKP = 0x00;
  1963  0329  1215               	bcf	21,4	;volatile
  1964                           
  1965                           ;pic16f145x_spi.c: 17: SSPSTATbits.CKE = 0x01;
  1966  032A  1714               	bsf	20,6	;volatile
  1967                           
  1968                           ;pic16f145x_spi.c: 18: SSPSTATbits.SMP = 0x00;
  1969  032B  1394               	bcf	20,7	;volatile
  1970                           
  1971                           ;pic16f145x_spi.c: 19: SSPCONbits.SSPEN = 0x01;
  1972  032C  1695               	bsf	21,5	;volatile
  1973  032D  0008               	return
  1974  032E                     __end_of_spi_config:	
  1975                           
  1976                           	psect	text8
  1977  031C                     __ptext8:	
  1978 ;; *************** function _port_config *****************
  1979 ;; Defined at:
  1980 ;;		line 10 in file "conf.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		None
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    3
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_config
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _port_config
  2010  031C                     _port_config:	
  2011                           
  2012                           ;conf.c: 14: TRISCbits.TRISC0 = 0;
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _port_config: []
  2016  031C  0021               	movlb	1	; select bank1
  2017  031D  100E               	bcf	14,0	;volatile
  2018                           
  2019                           ;conf.c: 15: TRISCbits.TRISC1 = 1;
  2020  031E  148E               	bsf	14,1	;volatile
  2021                           
  2022                           ;conf.c: 16: TRISCbits.TRISC2 = 0;
  2023  031F  110E               	bcf	14,2	;volatile
  2024                           
  2025                           ;conf.c: 19: TRISCbits.TRISC4 = 0;
  2026  0320  120E               	bcf	14,4	;volatile
  2027                           
  2028                           ;conf.c: 20: TRISCbits.TRISC5 = 0;
  2029  0321  128E               	bcf	14,5	;volatile
  2030                           
  2031                           ;conf.c: 23: TRISCbits.TRISC3 = 0;
  2032  0322  118E               	bcf	14,3	;volatile
  2033                           
  2034                           ;conf.c: 24: TRISAbits.TRISA4 = 0;
  2035  0323  120C               	bcf	12,4	;volatile
  2036                           
  2037                           ;conf.c: 25: TRISAbits.TRISA5 = 1;
  2038  0324  168C               	bsf	12,5	;volatile
  2039  0325  0008               	return
  2040  0326                     __end_of_port_config:	
  2041                           
  2042                           	psect	text9
  2043  033E                     __ptext9:	
  2044 ;; *************** function _ad747_init *****************
  2045 ;; Defined at:
  2046 ;;		line 4 in file "pic16f145x_ad747xa.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;		None               void
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    3
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_config
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _ad747_init
  2076  033E                     _ad747_init:	
  2077                           
  2078                           ;pic16f145x_ad747xa.c: 6: LATCbits.LATC4 = 1;
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _ad747_init: []
  2082  033E  0022               	movlb	2	; select bank2
  2083  033F  160E               	bsf	14,4	;volatile
  2084                           
  2085                           ;pic16f145x_ad747xa.c: 7: LATCbits.LATC5 = 1;
  2086  0340  168E               	bsf	14,5	;volatile
  2087  0341  0008               	return
  2088  0342                     __end_of_ad747_init:	
  2089                           
  2090                           	psect	intentry
  2091  0004                     __pintentry:	
  2092 ;; *************** function _ISR *****************
  2093 ;; Defined at:
  2094 ;;		line 76 in file "main.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;Total ram usage:        1 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    2
  2115 ;; This function calls:
  2116 ;;		_adc_12
  2117 ;;		_adc_8
  2118 ;; This function is called by:
  2119 ;;		Interrupt level 1
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123  0004                     _ISR:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2127  0004  3180               	pagesel	$
  2128  0005  0020               	movlb	0	; select bank0
  2129  0006  087F               	movf	127,w
  2130  0007  00FC               	movwf	??_ISR
  2131                           
  2132                           ;main.c: 78: if (INTCONbits.TMR0IF) {
  2133  0008  1D0B               	btfss	11,2	;volatile
  2134  0009  2816               	goto	i1l45
  2135                           
  2136                           ;main.c: 79: INTCONbits.TMR0IF = 0x00;
  2137  000A  110B               	bcf	11,2	;volatile
  2138                           
  2139                           ;main.c: 81: cur_data = adc_8();
  2140  000B  3182  2205  3180   	fcall	_adc_8
  2141  000E  0877               	movf	?_adc_8+1,w
  2142  000F  0020               	movlb	0	; select bank0
  2143  0010  00E2               	movwf	_cur_data+1
  2144  0011  0876               	movf	?_adc_8,w
  2145  0012  00E1               	movwf	_cur_data
  2146                           
  2147                           ;main.c: 82: adc_12(vib_data);
  2148  0013  306B               	movlw	(low (_vib_data| 0))& (0+255)
  2149  0014  3182  22C4         	fcall	_adc_12
  2150  0016                     i1l45:	
  2151  0016  087C               	movf	??_ISR,w
  2152  0017  0020               	movlb	0	; select bank0
  2153  0018  00FF               	movwf	127
  2154  0019  0009               	retfie
  2155  001A                     __end_of_ISR:	
  2156                           
  2157                           	psect	text11
  2158  0205                     __ptext11:	
  2159 ;; *************** function _adc_8 *****************
  2160 ;; Defined at:
  2161 ;;		line 10 in file "pic16f145x_ad747xa.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  data            2   10[COMMON] unsigned int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2    6[COMMON] unsigned int 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;Total ram usage:        6 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    1
  2182 ;; This function calls:
  2183 ;;		i1_spi
  2184 ;; This function is called by:
  2185 ;;		_ISR
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function _adc_8
  2191  0205                     _adc_8:	
  2192                           
  2193                           ;pic16f145x_ad747xa.c: 12: unsigned int data = 0x00;
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in _adc_8: [wreg+status,2+status,0+pclath+cstack]
  2197  0205  01FA               	clrf	adc_8@data
  2198  0206  01FB               	clrf	adc_8@data+1
  2199                           
  2200                           ;pic16f145x_ad747xa.c: 14: LATCbits.LATC4 = 0;
  2201  0207  0022               	movlb	2	; select bank2
  2202  0208  120E               	bcf	14,4	;volatile
  2203                           
  2204                           ;pic16f145x_ad747xa.c: 17: data = spi(0x00)<<4;
  2205  0209  3000               	movlw	0
  2206  020A  00F0               	movwf	i1spi@mosi
  2207  020B  00F1               	movwf	i1spi@mosi+1
  2208  020C  3182  22F8  3182   	fcall	i1_spi
  2209  020F  0870               	movf	?i1_spi,w
  2210  0210  00F8               	movwf	??_adc_8
  2211  0211  0871               	movf	?i1_spi+1,w
  2212  0212  00F9               	movwf	??_adc_8+1
  2213  0213  0EF8               	swapf	??_adc_8,f
  2214  0214  0EF9               	swapf	??_adc_8+1,f
  2215  0215  30F0               	movlw	240
  2216  0216  05F9               	andwf	??_adc_8+1,f
  2217  0217  0878               	movf	??_adc_8,w
  2218  0218  390F               	andlw	15
  2219  0219  04F9               	iorwf	??_adc_8+1,f
  2220  021A  30F0               	movlw	240
  2221  021B  05F8               	andwf	??_adc_8,f
  2222  021C  0878               	movf	??_adc_8,w
  2223  021D  00FA               	movwf	adc_8@data
  2224  021E  0879               	movf	??_adc_8+1,w
  2225  021F  00FB               	movwf	adc_8@data+1
  2226                           
  2227                           ;pic16f145x_ad747xa.c: 18: data = data|(spi(0x00)>>4);
  2228  0220  3000               	movlw	0
  2229  0221  00F0               	movwf	i1spi@mosi
  2230  0222  00F1               	movwf	i1spi@mosi+1
  2231  0223  3182  22F8  3182   	fcall	i1_spi
  2232  0226  0870               	movf	?i1_spi,w
  2233  0227  00F8               	movwf	??_adc_8
  2234  0228  0871               	movf	?i1_spi+1,w
  2235  0229  00F9               	movwf	??_adc_8+1
  2236  022A  3004               	movlw	4
  2237  022B                     u19_25:	
  2238  022B  36F9               	lsrf	??_adc_8+1,f
  2239  022C  0CF8               	rrf	??_adc_8,f
  2240  022D  0B89               	decfsz	9,f
  2241  022E  2A2B               	goto	u19_25
  2242  022F  087A               	movf	adc_8@data,w
  2243  0230  0478               	iorwf	??_adc_8,w
  2244  0231  00FA               	movwf	adc_8@data
  2245  0232  087B               	movf	adc_8@data+1,w
  2246  0233  0479               	iorwf	??_adc_8+1,w
  2247  0234  00FB               	movwf	adc_8@data+1
  2248                           
  2249                           ;pic16f145x_ad747xa.c: 20: LATCbits.LATC4 = 1;
  2250  0235  0022               	movlb	2	; select bank2
  2251  0236  160E               	bsf	14,4	;volatile
  2252                           
  2253                           ;pic16f145x_ad747xa.c: 22: return data;
  2254  0237  087B               	movf	adc_8@data+1,w
  2255  0238  00F7               	movwf	?_adc_8+1
  2256  0239  087A               	movf	adc_8@data,w
  2257  023A  00F6               	movwf	?_adc_8
  2258  023B  0008               	return
  2259  023C                     __end_of_adc_8:	
  2260                           
  2261                           	psect	text12
  2262  02C4                     __ptext12:	
  2263 ;; *************** function _adc_12 *****************
  2264 ;; Defined at:
  2265 ;;		line 25 in file "pic16f145x_ad747xa.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  mosi            1    wreg     PTR unsigned int 
  2268 ;;		 -> vib_data(4), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  mosi            1    6[COMMON] PTR unsigned int 
  2271 ;;		 -> vib_data(4), 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;Total ram usage:        1 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		i1_spi
  2290 ;; This function is called by:
  2291 ;;		_ISR
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function _adc_12
  2297  02C4                     _adc_12:	
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _adc_12: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2301                           ;adc_12@mosi stored from wreg
  2302  02C4  00F6               	movwf	adc_12@mosi
  2303                           
  2304                           ;pic16f145x_ad747xa.c: 27: LATCbits.LATC5 = 0;
  2305  02C5  0022               	movlb	2	; select bank2
  2306  02C6  128E               	bcf	14,5	;volatile
  2307                           
  2308                           ;pic16f145x_ad747xa.c: 30: mosi[0] = spi(0x00);
  2309  02C7  3000               	movlw	0
  2310  02C8  00F0               	movwf	i1spi@mosi
  2311  02C9  00F1               	movwf	i1spi@mosi+1
  2312  02CA  3182  22F8  3182   	fcall	i1_spi
  2313  02CD  0876               	movf	adc_12@mosi,w
  2314  02CE  0086               	movwf	6
  2315  02CF  0187               	clrf	7
  2316  02D0  0870               	movf	?i1_spi,w
  2317  02D1  3FC0               	movwi [0]fsr1
  2318  02D2  0871               	movf	?i1_spi+1,w
  2319  02D3  3FC1               	movwi [1]fsr1
  2320                           
  2321                           ;pic16f145x_ad747xa.c: 31: mosi[1] = spi(0x00);
  2322  02D4  3000               	movlw	0
  2323  02D5  00F0               	movwf	i1spi@mosi
  2324  02D6  00F1               	movwf	i1spi@mosi+1
  2325  02D7  3182  22F8         	fcall	i1_spi
  2326  02D9  0876               	movf	adc_12@mosi,w
  2327  02DA  3E02               	addlw	2
  2328  02DB  0086               	movwf	6
  2329  02DC  0187               	clrf	7
  2330  02DD  0870               	movf	?i1_spi,w
  2331  02DE  3FC0               	movwi [0]fsr1
  2332  02DF  0871               	movf	?i1_spi+1,w
  2333  02E0  3FC1               	movwi [1]fsr1
  2334                           
  2335                           ;pic16f145x_ad747xa.c: 33: LATCbits.LATC5 = 1;
  2336  02E1  0022               	movlb	2	; select bank2
  2337  02E2  168E               	bsf	14,5	;volatile
  2338  02E3  0008               	return
  2339  02E4                     __end_of_adc_12:	
  2340                           
  2341                           	psect	text13
  2342  02F8                     __ptext13:	
  2343 ;; *************** function i1_spi *****************
  2344 ;; Defined at:
  2345 ;;		line 26 in file "pic16f145x_spi.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  mosi            2    0[COMMON] unsigned int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  spi             2    4[COMMON] unsigned int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  2    0[COMMON] unsigned int 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        6 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_adc_8
  2369 ;;		_adc_12
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function i1_spi
  2375  02F8                     i1_spi:	
  2376                           
  2377                           ;pic16f145x_spi.c: 28: unsigned int miso;
  2378                           ;pic16f145x_spi.c: 30: PIR1bits.SSP1IF=0;
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in i1_spi: [wreg]
  2382  02F8  0020               	movlb	0	; select bank0
  2383  02F9  1191               	bcf	17,3	;volatile
  2384                           
  2385                           ;pic16f145x_spi.c: 31: SSPBUF = mosi;
  2386  02FA  0870               	movf	i1spi@mosi,w
  2387  02FB  0024               	movlb	4	; select bank4
  2388  02FC  0091               	movwf	17	;volatile
  2389  02FD                     i1l59:	
  2390                           ;pic16f145x_spi.c: 32: while(!SSPSTATbits.BF);
  2391                           
  2392  02FD  1C14               	btfss	20,0	;volatile
  2393  02FE  2AFD               	goto	i1l59
  2394                           
  2395                           ;pic16f145x_spi.c: 33: miso = SSPBUF;
  2396  02FF  0811               	movf	17,w	;volatile
  2397  0300  00F2               	movwf	??i1_spi
  2398  0301  01F3               	clrf	??i1_spi+1
  2399  0302  0872               	movf	??i1_spi,w
  2400  0303  00F4               	movwf	i1spi@miso
  2401  0304  0873               	movf	??i1_spi+1,w
  2402  0305  00F5               	movwf	i1spi@miso+1
  2403                           
  2404                           ;pic16f145x_spi.c: 34: return (miso);
  2405  0306  0875               	movf	i1spi@miso+1,w
  2406  0307  00F1               	movwf	?i1_spi+1
  2407  0308  0874               	movf	i1spi@miso,w
  2408  0309  00F0               	movwf	?i1_spi
  2409  030A  0008               	return
  2410  030B                     __end_ofi1_spi:	
  2411  007E                     btemp	set	126	;btemp
  2412  007E                     wtemp	set	126
  2413  007E                     wtemp0	set	126
  2414  0080                     wtemp1	set	128
  2415  0082                     wtemp2	set	130
  2416  0084                     wtemp3	set	132
  2417  0086                     wtemp4	set	134
  2418  0088                     wtemp5	set	136
  2419  007F                     wtemp6	set	127
  2420  007E                     ttemp	set	126
  2421  007E                     ttemp0	set	126
  2422  0081                     ttemp1	set	129
  2423  0084                     ttemp2	set	132
  2424  0087                     ttemp3	set	135
  2425  007F                     ttemp4	set	127
  2426  007E                     ltemp	set	126
  2427  007E                     ltemp0	set	126
  2428  0082                     ltemp1	set	130
  2429  0086                     ltemp2	set	134
  2430  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     25      79
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    adc_12@mosi	PTR unsigned int  size(1) Largest target is 4
		 -> vib_data(BANK0[4]), 

    wiz_write@mosi	PTR unsigned int  size(1) Largest target is 12
		 -> source_port(BANK0[4]), source_ip(BANK0[8]), mac(BANK0[12]), ip(BANK0[8]), 
		 -> gateway(BANK0[8]), subnet(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_adc_8
    _adc_8->i1_spi
    _adc_12->i1_spi

Critical Paths under _main in BANK0

    _config->_wiz_init
    _wiz_init->_wiz_write
    _wiz_write->_spi
    _wiz_reg_write->_spi
    _wiz_reg_read->_spi

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    6596
                                             21 BANK0      4     0      4
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0    6596
                         _ad747_init
                        _port_config
                         _spi_config
                           _wiz_init
 ---------------------------------------------------------------------------------
 (2) _wiz_init                                             5     5      0    6596
                                             16 BANK0      5     5      0
                       _wiz_reg_read
                      _wiz_reg_write
                          _wiz_write
 ---------------------------------------------------------------------------------
 (3) _wiz_write                                           10     3      7    2376
                                              6 BANK0     10     3      7
                                _spi
 ---------------------------------------------------------------------------------
 (3) _wiz_reg_write                                        6     0      6    2763
                                              6 BANK0      6     0      6
                                _spi
 ---------------------------------------------------------------------------------
 (3) _wiz_reg_read                                         6     2      4    1121
                                              6 BANK0      6     2      4
                                _spi
 ---------------------------------------------------------------------------------
 (4) _spi                                                  6     4      2     948
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _spi_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _port_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ad747_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0     416
                                             12 COMMON     1     1      0
                             _adc_12
                              _adc_8
 ---------------------------------------------------------------------------------
 (6) _adc_8                                                6     4      2     196
                                              6 COMMON     6     4      2
                              i1_spi
 ---------------------------------------------------------------------------------
 (6) _adc_12                                               1     1      0     220
                                              6 COMMON     1     1      0
                              i1_spi
 ---------------------------------------------------------------------------------
 (7) i1_spi                                                6     4      2     149
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _ad747_init
     _port_config
     _spi_config
     _wiz_init
       _wiz_reg_read
         _spi
       _wiz_reg_write
         _spi
       _wiz_write
         _spi

 _ISR (ROOT)
   _adc_12
     i1_spi
   _adc_8
     i1_spi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 05 10:17:15 2015

            __CFG_CP$OFF 0000              _SSPSTATbits 0214                       l38 033D  
                     l59 02E9                       l94 01FC                       _ip 002C  
                    l713 01E1                      l741 0050                      l743 0066  
                    l775 0135                      l759 00F5                      l793 01B3  
                    l769 0128                      u125 01E7                      u217 0037  
                    u227 004B                      u237 0060                      u247 01B6  
                    u257 0201                      _ISR 0004                      _mac 0020  
                    _spi 02E4             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   ?_spi 0048                     i1l45 0016                     i1l59 02FD  
           __CFG_WRT$OFF 0000              _source_port 0044                     _main 033A  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 001A                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_ISR 007C  
                  ??_spi 004A    __size_of_wiz_reg_read 0034                    ?_main 005D  
          __CFG_WDTE$OFF 0000                    u19_25 022B                    i1_spi 02F8  
         __CFG_FCMEN$OFF 0000                    _adc_8 0205               _ad747_init 033E  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F             _wiz_reg_read 023C  
         __CFG_MCLRE$OFF 0000          __initialization 001C             __end_of_main 033E  
         __CFG_LPBOR$OFF 0000                   ??_main 0061         wiz_write@addr_hi 004E  
       wiz_write@addr_lo 0050      __CFG_USBLSCLK$48MHz 0000                   ?i1_spi 0070  
 __size_of_wiz_reg_write 002C                   ?_adc_8 0076                   _SSPBUF 0211  
         __CFG_PWRTE$OFF 0000                   _adc_12 02C4           __CFG_STVREN$ON 0000  
                 _config 030B                   _subnet 003C               adc_12@mosi 0076  
            ?_ad747_init 0070         __end_of_wiz_init 01BC  __end_of__initialization 002F  
           ?_port_config 0070            _wiz_reg_write 0270            __end_ofi1_spi 030B  
         __pcstackCOMMON 0070            __end_of_adc_8 023C             __pidataBANK0 029C  
    wiz_reg_read@addr_hi 004E      wiz_reg_read@addr_lo 0050         wiz_reg_read@miso 0052  
                ??i1_spi 0072                  ??_adc_8 0078               __pbssBANK0 0061  
         ?_wiz_reg_write 004E               __pmaintext 033A                  ?_adc_12 0070  
        __CFG_PLLMULT$3x 0000               __pintentry 0004                  ?_config 0070  
    __size_of_ad747_init 0004             wiz_init@sock 005B       __size_of_wiz_write 0049  
        __size_of_adc_12 0020          __size_of_config 0011                ?_wiz_init 0070  
                __ptext1 030B                  __ptext2 0032                  __ptext3 01BC  
                __ptext4 0270                  __ptext5 023C                  __ptext6 02E4  
                __ptext7 0326                  __ptext8 031C                  __ptext9 033E  
                _gateway 0063             __size_of_ISR 0016             __size_of_spi 0014  
                clrloop0 032F     end_of_initialization 002F          ??_wiz_reg_write 0054  
                init_ram 0334                  initloop 0335                  spi@miso 004C  
                spi@mosi 0048     __size_of_port_config 000A               ??_wiz_init 0058  
             _spi_config 0326        __end_of_wiz_write 0205                _TRISAbits 008C  
              _TRISCbits 008E             ??_ad747_init 0048       __CFG_PLLEN$ENABLED 0000  
         __end_of_adc_12 02E4       __end_of_ad747_init 0342           __end_of_config 031C  
              i1spi@miso 0074                i1spi@mosi 0070      start_initialization 001C  
            __end_of_ISR 001A              __end_of_spi 02F8          wiz_write@length 0053  
               ??_adc_12 0076                 ??_config 005D              __pdataBANK0 0020  
            ?_spi_config 0070                adc_8@data 007A                ___latbits 0002  
          __pcstackBANK0 0048            ?_wiz_reg_read 004E        __size_of_wiz_init 018A  
         __size_ofi1_spi 0013     wiz_reg_write@addr_hi 004E     wiz_reg_write@addr_lo 0050  
         __size_of_adc_8 0037        wiz_reg_write@mosi 0052                 _LATCbits 010E  
         ??_wiz_reg_read 0052                clear_ram0 032E      __size_of_spi_config 0008  
               _PIR1bits 0011                _source_ip 0034                _wiz_write 01BC  
          ??_port_config 0048    __end_of_wiz_reg_write 029C               ?_wiz_write 004E  
               __ptext11 0205                 __ptext12 02C4                 __ptext13 02F8  
               _cur_data 0061            __size_of_main 0004               wiz_write@i 0056  
               _vib_data 006B      __end_of_port_config 0326                 main@argc 005D  
               main@argv 005F                 _wiz_init 0032             ??_spi_config 0048  
   __end_of_wiz_reg_read 0270               _INTCONbits 000B            wiz_write@mosi 0052  
               intlevel1 0000                wiz_init@i 0059        __CFG_CLKOUTEN$OFF 0000  
     __end_of_spi_config 032E     __CFG_CPUDIV$NOCLKDIV 0000               _OPTION_REG 0095  
            ??_wiz_write 0055              _port_config 031C               _SSPCONbits 0215  
